definitions:
  controller.CreateInput:
    properties:
      amount:
        format: float64
        type: number
      category:
        $ref: '#/definitions/models.ExpenseCategory'
      date:
        type: string
      note:
        type: string
    type: object
  controller.UpdateAmount:
    properties:
      amount:
        type: number
    type: object
  controller.UserAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.ExpenseCategory:
    enum:
    - Housing
    - Utilities
    - Transportation
    - Food_Groceries
    - Health_Fitness
    - Entertainment
    - Education
    - Clothing
    - Personal_Care
    - Gifts_Donation
    - Travel_Vacation
    - Insurance
    - Miscellaneous
    type: string
    x-enum-varnames:
    - Housing
    - Utilities
    - Transportation
    - Food_Groceries
    - Health_Fitness
    - Entertainment
    - Education
    - Clothing
    - Personal_Care
    - Gifts_Donation
    - Travel_Vacation
    - Insurance
    - Miscellaneous
info:
  contact: {}
paths:
  /api/expenses:
    post:
      consumes:
      - application/json
      description: Create an new expenses
      parameters:
      - description: New expense
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.CreateInput'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create expense
      tags:
      - expenses
  /api/expenses/{id}:
    delete:
      consumes:
      - application/json
      description: delete expense by id
      parameters:
      - description: expense id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: delete expense
      tags:
      - expenses
    get:
      consumes:
      - application/json
      description: get single expense by id
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get single expense
      tags:
      - expenses
    patch:
      consumes:
      - application/json
      description: update amount by id
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      - description: New amount
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateAmount'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: update expense amount
      tags:
      - expenses
  /api/expenses/all:
    get:
      consumes:
      - application/json
      description: get all expenses
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: read all expense
      tags:
      - expenses
  /api/expenses/category/all:
    get:
      consumes:
      - application/json
      description: get all categories
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: show all categories
      tags:
      - categories
  /api/expenses/filter:
    get:
      consumes:
      - application/json
      description: get expenses by date and category
      parameters:
      - description: id
        in: query
        name: id
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: from
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: to
        type: string
      - description: category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: get expense
      tags:
      - expenses
  /auth/Login:
    post:
      consumes:
      - application/json
      description: authenticate the user
      parameters:
      - description: Login user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.UserAuth'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: authenticate the user
      tags:
      - user
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create an new user
      parameters:
      - description: New user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.UserAuth'
      produces:
      - application/json
      responses: {}
      summary: Create user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
